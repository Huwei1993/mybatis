<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		<!-- namespace的命名空间，对sql进行分类化管理，理解sql隔离
			注意：使用mapper代理开发，namespace有着特殊的重要作用
		 -->
		
<mapper namespace="sys"> 	
	<!-- 在映射文件中配置上sql语句 -->
	<!-- 需求：通过id查询信息 -->
	<!-- 通过select执行数据库来查询 
		id： 标志映射文件中的sql，称为statement的id，
		将sql语句封装到mappedStatement对象中 ，所以将id称为statement的id
		parameterType: 指定输入参数的类型，这里的int型是数据库当中的nid的类型
		{id} ：id表示输入法 参数，参数名称就是id，如果输入的参数是简单类型，则这里#{}中的参数可以任意，可以是value或者其他的名称
		resultType: 指定sql输出结果的所映射的java对象 类型，select指定resultType表示将单条记录映射成的java对象
		
	-->
	
	<select id="findUserById" parameterType="int" resultType="com.itcast.po.User">
		SELECT * FROM user WHERE id = #{id}
	</select>
	
	
	<!-- 根据用户名称模糊查询用户信息
		${}: 表示拼接sql串，将接收到的参数内容不加任何修饰的拼接在sql串中
		使用${}拼接sql语句，可能引起sql注入
		${value}:接收输入参数的内容，如果输入参数是简单类型，${}中只能使用value
	 -->
	<select id = "findUserByName"  parameterType="String" resultType="com.itcast.po.User">
		SELECT * FROM user WHERE username LIKE '%${value}%'
	</select>
	<!-- 配置添加用户 -->
	<insert id = "insertUser"   parameterType="com.itcast.po.User">
		<!--
		将插入数据的主键返回，返回到user对象当中
		SELCET LAST_INSERT_ID()  ： 得到刚insert进去的主键值，只适用于自增主键 
		keyProperty ：将查询到的主键值设置到parameterType指定的哪个属性
		order:SELCET LAST_INSERT_ID()执行顺序，相对于insert语句来说它的执行顺序
		resultType : 指定返回的结果类型
		-->			
		<selectKey  keyProperty="nid" order="AFTER"  resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()   <!-- 自增主键查询 -->
		</selectKey>
		insert into user(username,sex,address) value(#{username},#{sex},#{address})
		
		<!-- 非自增主键查询 -->
		<!-- <selectKey  keyProperty="nid" order="BEFORE"  resultType="java.lang.String">
			SELECT UUID()   非自增主键查询
		</selectKey> -->
		<!-- 自增状况下可以省略nid，非自增是必须写上去 
		insert into student_info(nid,name,className,major) value(#{nid},#{name},#{className},#{major}) -->
	</insert>
	
						<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="java.lang.Integer">
		delete from user where id =#{id}
	</delete>
				<!-- 更新用户 -->
	<update id="updataUser" parameterType = "com.itcast.po.User">
		update user set username=#{name},sex=#{sex},address=#{address} where id =#{id}
		
	</update>
	
</mapper>