<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		<!-- namespace的命名空间，对sql进行分类化管理，理解sql隔离
			注意：使用mapper代理开发，namespace有着特殊的重要作用
		 -->
		
<mapper namespace="mapper.OrdersMapperCusTom"  >

	<!-- 定义resultMap，用于订单查询关联用户的 
		将查询结果映射到Orders中
	-->
	<resultMap type="com.itcast.po.Orders" id="OrdersUserResultMap">
		<!--配置订单信息   id 表的唯一标识，如果是多列组成唯一标识，则配置多个id
			column : 表的唯一标识
			property: 映射到Orders类的属性值
		 -->
			<id   column="id" property="id"  />
			<result   column="user_id" property="userId"/>
			<result   column="number" property="number"/>
			<result   column="createtime" property="createtime"/>
			<result   column="note" property="note"/>
		
		<!-- 配置映射的关联用户信息 
		association: 用于映射关联查询单个对象的信息
		property：要将关联查询的用户信息映射到Orders里面的哪个属性
		-->
		
			<!-- id:指关联用户的 唯一标识 -->
		<association property="user"  javaType="com.itcast.po.User">
			<id column="user_id"  property="id"/>
			<result column="username"  property="username"/>
			<result column="sex"  property="sex"/>
			<result column="address"  property="address"/>
		</association>
	</resultMap>
	
	<!-- 定义订单查询查询定单关联查询用户及订单明细的resultMap
		使用继承extends，由于和上面的代码重复
	 -->
		<resultMap type="com.itcast.po.Orders" id="OrderAndOrderDetailResultMap"  extends="OrdersUserResultMap">
			<!--配置订单信息   id 表的唯一标识，如果是多列组成唯一标识，则配置多个id
			column : 表的唯一标识
			property: 映射到Orders类的属性值
		 -->
		<!-- 	<id   column="id" property="id"  />
			<result   column="user_id" property="userId"/>
			<result   column="number" property="number"/>
			<result   column="createtime" property="createtime"/>
			<result   column="note" property="note"/> -->
		
		<!-- 配置映射的关联用户信息 
		association: 用于映射关联查询单个对象的信息
		property：要将关联查询的用户信息映射到Orders里面的哪个属性
		-->
		
			<!-- id:指关联用户的 唯一标识 -->
		<!-- <association property="user"  javaType="com.itcast.po.User">
			<id column="user_id"  property="id"/>
			<result column="username"  property="usernaame"/>
			<result column="sex"  property="sex"/>
			<result column="address"  property="address"/>
		</association> -->
			<!-- 订单明细  多条记录映射到集合中 
				ofType:指定映射到集合属性中pojo的类型  com.itcast.po.Orderdetail （list中pojo的类型）
			-->
			<collection property="orderdetails" ofType="com.itcast.po.Orderdetail">
				<id  column="orderdetail_id"  property="id"/>
				<result column="items_id"  property="itemsId" />
				<result column="items_num"  property="itemsNum" />			
				<result column="orders_id"  property="ordersId" />
			
					
			</collection>
		</resultMap>
	
	
	
		<!-- 定义resultMap  查询用户及购买商品 信息  使用resultMap-->
		
		
		<resultMap type="com.itcast.po.User" id="UserAndItemsResultMap">
				<id column="user_id" property="id" />
				<result column="username" property="username" />
				<result column="sex" property="sex" />
				<result column="address" property="address" />
				<!-- 
					订单信息，一个用户对应多个订单，使用collection映射
					
				 -->
				 <collection property="orderslist" ofType="com.itcast.po.Orders" >
				 	<id  column="id"  property="id" />
				 	<result   column="number" property="number"/>
					<result   column="createtime" property="createtime"/>
					<result   column="note" property="note"/>
					
					
					<!-- 订单明细   一个订单包含多个明细-->
				<collection property="orderdetails"  ofType="com.itcast.po.Orderdetail">
					<id  column="orderdetail_id"  property="id"/>
					<result column="items_id"  property="itemsId" />
					<result column="items_num"  property="itemsNum" />			
					<result column="orders_id"  property="ordersId" />
					


					<!-- 商品信息   一个订单对用一个商品-->	
						 <association property="items"  javaType="com.itcast.po.Items">
							<id   column="items_id" property="id"  />
							<result column="items_name" property="name" />
							<result column="items_detail" property="detail" />
							<result column="items_price" property="price" />
						</association>		
					</collection>	
						
			 </collection>

					
			
				
		</resultMap>
		
	

		<!-- 查询订单关联查询信息 -->
	<select id="findOrdersUser"  resultType="com.itcast.po.OrdersCusTom">
		select orders.*,
		user.username,
		user.sex,
		user.address
		from
		orders,user
		where orders.user_id = user.id
	</select> 	
	
	<!-- 查询用户信息的resultMap -->
	<select id="findOrderUserResultMap"  resultMap = "OrdersUserResultMap">
		select orders.*,
		user.username,
		user.sex,
		user.address
		from
		orders,user
		where orders.user_id = user.id
	</select> 	
	
	
	
	
	<!-- 查询定单关联查询用户及订单明细，使用resultMap -->
	<select id="findOrderAndOrderDetailResultMap"  resultMap = "OrderAndOrderDetailResultMap">
		select 
		  orders.*,
		  user.username,
		  user.sex,
		  user.address,
		  orderdetail.id  orderdetail_id,
		  orderdetail.items_id,
		  orderdetail.items_num 
		from 
		  orders,user,orderdetail 
		where 
		  orders.user_id =user.id and orderdetail.orders_id=orders.id
	
	</select>	
	
				<!-- 查询用户及购买商品 信息  使用resultMap-->
	<select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap" >
		select 
		  orders.*,
		  user.username,
		  user.sex,
		  user.address,
		  orderdetail.id  orderdetail_id,
		  orderdetail.items_id,
		  orderdetail.items_num,
		  items.name  items_name,
		  items.detail items_detail,
		  items.price  items_price 
		from 
		  orders,user,orderdetail,items
		where 
		  orders.user_id =user.id and orderdetail.orders_id=orders.id and  orderdetail.items_id = items.id
	</select>	
	
	<!-- 用户信息延迟加载，定义需要使用的resultMap -->
	<resultMap type="com.itcast.po.Orders" id="OrdersUserLazyLoading">
		<!-- 对订单信息进行映射配置 -->
		<id  column="id"  property="id"/>
		<result   column="number" property="number"/>
		<result   column="createtime" property="createtime"/>
		<result   column="note" property="note"/>

	
		<!-- 实现用户信息延迟加载 -->
		<!-- select:指定延迟加载需要执行的statement的id（是根据user_id查询用户信息的）要使用userMapper.xml 中的findUserById来完成用户信息的查询 ，如果findUserById不在本文件中，
		需要加上另一文件的命名空间mapper.UserMapper
			column:订单的信息中关联用户信息查询的列，是user_id
			关联查询sql理解为：
			 select orders.*,
			 (select username from user where orders.user_id = user.id)username,
			 (select sex from user where orders.user_id = user.id)sex 
			 from orders
			
		 -->
		
		<association property="user"  javaType="com.itcast.po.User"  select="mapper.UserMapper.findUserById"  column="user.id" >
			<!-- 实现用户信息延迟加载 -->
			
		</association>
		
	</resultMap>
	
	
	<!-- 查询订单关联查询用户，用户信息需要延迟加载      需要resultMap-->
	
	<select id="findOrdersUserLazyLoading"  resultMap="OrdersUserLazyLoading">
		select * from orders
	</select>
	
	
	
</mapper>